col_vals_between(
columns = vars(NWFwrc),
left = 0,
right = 78,
na_pass = TRUE
) %>%
# Expect that column `ORFwc` is of type: numeric
col_is_numeric(
columns = vars(ORFwc)
) %>%
# Expect that values in `ORFwc` should be between `0` and `141`
col_vals_between(
columns = vars(ORFwc),
left = 0,
right = 141,
na_pass = TRUE
) %>%
# Expect that column `SAwrS` is of type: numeric
col_is_numeric(
columns = vars(SAwrS)
) %>%
# Expect that values in `SAwrS` should be between `361` and `608`
col_vals_between(
columns = vars(SAwrS),
left = 361,
right = 608,
na_pass = TRUE
) %>%
# Expect that column `SAsrS` is of type: numeric
col_is_numeric(
columns = vars(SAsrS)
) %>%
# Expect that values in `SAsrS` should be between `375` and `632`
col_vals_between(
columns = vars(SAsrS),
left = 375,
right = 632,
na_pass = TRUE
) %>%
# Expect that column `SAtoS` is of type: numeric
col_is_numeric(
columns = vars(SAtoS)
) %>%
# Expect that values in `SAtoS` should be between `445` and `665`
col_vals_between(
columns = vars(SAtoS),
left = 445,
right = 665,
na_pass = TRUE
) %>%
# Expect that column `RMwidRS` is of type: numeric
col_is_numeric(
columns = vars(RMwidRS)
) %>%
# Expect that values in `RMwidRS` should be between `0` and `72`
col_vals_between(
columns = vars(RMwidRS),
left = 0,
right = 72,
na_pass = TRUE
) %>%
# Expect that column `RMwdaRS` is of type: numeric
col_is_numeric(
columns = vars(RMwdaRS)
) %>%
# Expect that values in `RMwdaRS` should be between `0` and `38`
col_vals_between(
columns = vars(RMwdaRS),
left = 0,
right = 38,
na_pass = TRUE
) %>%
# Expect entirely distinct rows across all columns
rows_distinct() %>%
# Expect that column schemas match
col_schema_match(
schema = col_schema(
StuID = "numeric",
Tier = "numeric",
SchlID = "numeric",
TeachID = "numeric",
Tx = "numeric",
Cohort = "numeric",
Keep = "numeric",
Time = "numeric",
t = "numeric",
NWFcls = "numeric",
NWFwrc = "numeric",
ORFwc = "numeric",
SAwrS = "numeric",
SAsrS = "numeric",
SAtoS = "numeric",
RMwidRS = "numeric",
RMwdaRS = "numeric"
)
) %>%
interrogate()
agent
export_report(
agent,
filename = "test.html")
df$Time
stats::kmeans(df$NWFcls, centers = 3, nstart = 10)
hist(df$NWFcls)
stats::kmeans(df, centers = 3, nstart = 10)
stats::kmeans(df, centers = 3, nstart = 10)
??stats::kmeans
names(df)
test<-df%>%select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS,RMwidRS,RMwdaR)
test<-df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS,RMwidRS,RMwdaR)
test<-df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS)
stats::kmeans(tes, centers = 3, nstart = 10)
stats::kmeans(test, centers = 3, nstart = 10)
test
View(df)
test<-na.omit(df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
stats::kmeans(test, centers = 3, nstart = 10)
m<-stats::kmeans(test, centers = 3, nstart = 10)
plot(test, col = m$cluster)
test<-na.omit(df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
View(df)
gclus::cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(3)[df_small$Tx])
df_small<-na.omit(df%>%dplyr::select(Tx,NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
gclus::cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(3)[df_small$Tx])
install.packages("gclus")
librarinstall.packages("gclus")
library(gclus)
gclus::cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(3)[df_small$Tx])
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(3)[df_small$Tx])
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[df_small$Tx])
df_small<-na.omit(df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
# Correlation in absolute terms
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[df$Tx])#color by group
df_small<-na.omit(df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
# Correlation in absolute terms
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[df$Tx])#color by group
factor(df$Tx)
df$Tx)
df$Tx
df <- haven::read_sas("Ms_S1Tier2Impact.sav")
setwd("~/Dropbox (MIT)/BU_TEACH/ECRI")
df <- haven::read_sas("Ms_S1Tier2Impact.sav")
df2<-read.csv("ecri2022.csv")
setwd("~/Dropbox (MIT)/GitHub/BU_TEACH/validation")
setwd(getSrcDirectory(function(){})[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- haven::read_sas("ms_s1tier2impact.sas7bdat")
df2<-read.csv("ecri2022.csv")
df_small<-na.omit(df2%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
# Correlation in absolute terms
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[df$Tx])#color by group
View(df2)
View(df2)
d3<-read.csv("ms_s1s2tier2impact.csv")
View(d3)
knitr::opts_chunk$set(echo = TRUE)
library(pointblank)
library(tidyverse)
library(blastula)
library(palmerpenguins)
setwd("~/Dropbox (MIT)/BU_TEACH/ECRI")
df <- haven::read_sas("ms_s1tier2impact.sas7bdat")
d3<-read.csv("ms_s1s2tier2impact.csv")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d3<-read.csv("ms_s1s2tier2impact.csv")
df_small<-na.omit(d3%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
# Correlation in absolute terms
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[d3$Tx])#color by group
df_small<-na.omit(d3%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
d3$Tx
knitr::opts_chunk$set(echo = TRUE)
library(pointblank)
library(tidyverse)
library(blastula)
library(palmerpenguins)
library(gclus) #this is for visualizing correlations
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- haven::read_sas("ms_s1tier2impact.sas7bdat")
Packages <- c("dplyr", "reshape", "magrittr", "tidyr", "ggplot2", "ggpubr",
"lme4", "lmerTest","emmeans", "sjstats", "plotrix","dabestr","lmerTest", "grid", "plotrix", "readxl", "lmPerm","gridExtra", "grid","ggpubr",'sjmisc','relaimpo',"pbkrtest","effectsize","lsmeans")
lapply(Packages, library, character.only = TRUE)
# Use `scan_data()` and assign reporting to `tbl_scan`
tbl_scan <- scan_data(tbl = df, sections = "OVS")
# Write the `ptblank_tbl_scan` object to an HTML file
export_report(
tbl_scan,
filename = "tbl_scan_ecri.html"
)
draft_validation(
tbl = ~df, # This `~` makes it an expression for getting the data
tbl_name = "ecri",
file_name = "ecri-validation"
)
agent <-
create_agent(
tbl = ~df,
actions = action_levels(
warn_at = 0.05,
stop_at = 0.10,
notify_at = 0.25),
tbl_name = "ecri",
label = "Validation plan generated by `draft_validation()`."
) %>%
# Expect that column `StuID` is of type: numeric
col_is_numeric(
columns = vars(StuID)
) %>%
# Expect that values in `StuID` should be between `1` and `6136`
col_vals_between(
columns = vars(StuID),
left = 1,
right = 6136
) %>%
# Expect that column `Tier` is of type: numeric
col_is_numeric(
columns = vars(Tier)
) %>%
# Expect that values in `Tier` should be between `2` and `2`
col_vals_between(
columns = vars(Tier),
left = 2,
right = 2
) %>%
# Expect that column `SchlID` is of type: numeric
col_is_numeric(
columns = vars(SchlID)
) %>%
# Expect that values in `SchlID` should be between `1` and `45`
col_vals_between(
columns = vars(SchlID),
left = 1,
right = 45
) %>%
# Expect that column `TeachID` is of type: numeric
col_is_numeric(
columns = vars(TeachID)
) %>%
# Expect that values in `TeachID` should be between `3` and `231`
col_vals_between(
columns = vars(TeachID),
left = 3,
right = 231
) %>%
# Expect that column `Tx` is of type: numeric
col_is_numeric(
columns = vars(Tx)
) %>%
# Expect that values in `Tx` should be between `0` and `1`
col_vals_between(
columns = vars(Tx),
left = 0,
right = 1
) %>%
# Expect that column `Cohort` is of type: numeric
col_is_numeric(
columns = vars(Cohort)
) %>%
# Expect that values in `Cohort` should be between `1` and `1`
col_vals_between(
columns = vars(Cohort),
left = 1,
right = 1
) %>%
# Expect that column `Keep` is of type: numeric
col_is_numeric(
columns = vars(Keep)
) %>%
# Expect that values in `Keep` should be between `1` and `1`
col_vals_between(
columns = vars(Keep),
left = 1,
right = 1
) %>%
# Expect that column `Time` is of type: numeric
col_is_numeric(
columns = vars(Time)
) %>%
# Expect that values in `Time` should be between `1` and `3`
col_vals_between(
columns = vars(Time),
left = 1,
right = 3
) %>%
# Expect that column `t` is of type: numeric
col_is_numeric(
columns = vars(t)
) %>%
# Expect that values in `t` should be between `0` and `2`
col_vals_between(
columns = vars(t),
left = 0,
right = 2
) %>%
# Expect that column `NWFcls` is of type: numeric
col_is_numeric(
columns = vars(NWFcls)
) %>%
# Expect that values in `NWFcls` should be between `4` and `221`
col_vals_between(
columns = vars(NWFcls),
left = 4,
right = 221,
na_pass = TRUE
) %>%
# Expect that column `NWFwrc` is of type: numeric
col_is_numeric(
columns = vars(NWFwrc)
) %>%
# Expect that values in `NWFwrc` should be between `0` and `78`
col_vals_between(
columns = vars(NWFwrc),
left = 0,
right = 78,
na_pass = TRUE
) %>%
# Expect that column `ORFwc` is of type: numeric
col_is_numeric(
columns = vars(ORFwc)
) %>%
# Expect that values in `ORFwc` should be between `0` and `141`
col_vals_between(
columns = vars(ORFwc),
left = 0,
right = 141,
na_pass = TRUE
) %>%
# Expect that column `SAwrS` is of type: numeric
col_is_numeric(
columns = vars(SAwrS)
) %>%
# Expect that values in `SAwrS` should be between `361` and `608`
col_vals_between(
columns = vars(SAwrS),
left = 361,
right = 608,
na_pass = TRUE
) %>%
# Expect that column `SAsrS` is of type: numeric
col_is_numeric(
columns = vars(SAsrS)
) %>%
# Expect that values in `SAsrS` should be between `375` and `632`
col_vals_between(
columns = vars(SAsrS),
left = 375,
right = 632,
na_pass = TRUE
) %>%
# Expect that column `SAtoS` is of type: numeric
col_is_numeric(
columns = vars(SAtoS)
) %>%
# Expect that values in `SAtoS` should be between `445` and `665`
col_vals_between(
columns = vars(SAtoS),
left = 445,
right = 665,
na_pass = TRUE
) %>%
# Expect that column `RMwidRS` is of type: numeric
col_is_numeric(
columns = vars(RMwidRS)
) %>%
# Expect that values in `RMwidRS` should be between `0` and `72`
col_vals_between(
columns = vars(RMwidRS),
left = 0,
right = 72,
na_pass = TRUE
) %>%
# Expect that column `RMwdaRS` is of type: numeric
col_is_numeric(
columns = vars(RMwdaRS)
) %>%
# Expect that values in `RMwdaRS` should be between `0` and `38`
col_vals_between(
columns = vars(RMwdaRS),
left = 0,
right = 38,
na_pass = TRUE
) %>%
# Expect entirely distinct rows across all columns
rows_distinct() %>%
# Expect that column schemas match
col_schema_match(
schema = col_schema(
StuID = "numeric",
Tier = "numeric",
SchlID = "numeric",
TeachID = "numeric",
Tx = "numeric",
Cohort = "numeric",
Keep = "numeric",
Time = "numeric",
t = "numeric",
NWFcls = "numeric",
NWFwrc = "numeric",
ORFwc = "numeric",
SAwrS = "numeric",
SAsrS = "numeric",
SAtoS = "numeric",
RMwidRS = "numeric",
RMwdaRS = "numeric"
)
) %>%
interrogate()
agent
export_report(
agent,
filename = "test.html")
df_small<-na.omit(df2%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
df_small<-na.omit(df%>%dplyr::select(NWFcls,NWFwrc,ORFwc,SAwrS,SAsrS,SAtoS))
# Correlation in absolute terms
corr <- abs(cor(df_small))
colors <- dmat.color(corr)
order <- order.single(corr)
cpairs(df_small,                    # Data frame of variables
order,                   # Order of the variables
panel.colors = colors,   # Matrix of panel colors
border.color = "grey70", # Borders color
gap = 0.45,              # Distance between subplots
main = "Ordered variables colored by correlation", # Main title
show.points = TRUE,      # If FALSE, removes all the points
pch = 21,                # pch symbol
bg = rainbow(2)[df$Tx])#color by group
